using System;
using System.Text;

/*
 * Copyright (C) 2016 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
namespace com.opengamma.strata.measure.bond
{

	using ImmutableBean = org.joda.beans.ImmutableBean;
	using JodaBeanUtils = org.joda.beans.JodaBeanUtils;
	using MetaBean = org.joda.beans.MetaBean;
	using TypedMetaBean = org.joda.beans.TypedMetaBean;
	using BeanDefinition = org.joda.beans.gen.BeanDefinition;
	using ImmutableConstructor = org.joda.beans.gen.ImmutableConstructor;
	using PropertyDefinition = org.joda.beans.gen.PropertyDefinition;
	using LightMetaBean = org.joda.beans.impl.light.LightMetaBean;

	using ArgChecker = com.opengamma.strata.collect.ArgChecker;
	using MarketData = com.opengamma.strata.data.MarketData;
	using LegalEntityDiscountingProvider = com.opengamma.strata.pricer.bond.LegalEntityDiscountingProvider;

	/// <summary>
	/// The default market data for products based on repo and issuer curves.
	/// <para>
	/// This uses a <seealso cref="LegalEntityDiscountingMarketDataLookup"/> to provide a view on <seealso cref="MarketData"/>.
	/// </para>
	/// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @BeanDefinition(style = "light") final class DefaultLegalEntityDiscountingMarketData implements LegalEntityDiscountingMarketData, org.joda.beans.ImmutableBean, java.io.Serializable
	[Serializable]
	internal sealed class DefaultLegalEntityDiscountingMarketData : LegalEntityDiscountingMarketData, ImmutableBean
	{
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull", overrideGet = true) private final LegalEntityDiscountingMarketDataLookup lookup;
		private readonly LegalEntityDiscountingMarketDataLookup lookup;
	  /// <summary>
	  /// The market data.
	  /// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull", overrideGet = true) private final com.opengamma.strata.data.MarketData marketData;
	  private readonly MarketData marketData;
	  /// <summary>
	  /// The discounting provider.
	  /// </summary>
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
	  [NonSerialized]
	  private readonly LegalEntityDiscountingProvider discountingProvider_Renamed; // derived

	  //-------------------------------------------------------------------------
	  /// <summary>
	  /// Obtains an instance based on a lookup and market data.
	  /// <para>
	  /// The lookup provides the mapping to find the correct repo and issuer curves.
	  /// The curves are in the market data.
	  /// 
	  /// </para>
	  /// </summary>
	  /// <param name="lookup">  the lookup </param>
	  /// <param name="marketData">  the market data </param>
	  /// <returns> the rates market view </returns>
	  internal static DefaultLegalEntityDiscountingMarketData of(LegalEntityDiscountingMarketDataLookup lookup, MarketData marketData)
	  {
		return new DefaultLegalEntityDiscountingMarketData(lookup, marketData);
	  }

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @ImmutableConstructor private DefaultLegalEntityDiscountingMarketData(LegalEntityDiscountingMarketDataLookup lookup, com.opengamma.strata.data.MarketData marketData)
	  private DefaultLegalEntityDiscountingMarketData(LegalEntityDiscountingMarketDataLookup lookup, MarketData marketData)
	  {
		this.lookup = ArgChecker.notNull(lookup, "lookup");
		this.marketData = ArgChecker.notNull(marketData, "marketData");
		this.discountingProvider_Renamed = lookup.discountingProvider(marketData);
	  }

	  // ensure standard constructor is invoked
	  private object readResolve()
	  {
		return new DefaultLegalEntityDiscountingMarketData(lookup, marketData);
	  }

	  //-------------------------------------------------------------------------
	  public LegalEntityDiscountingMarketData withMarketData(MarketData marketData)
	  {
		return DefaultLegalEntityDiscountingMarketData.of(lookup, marketData);
	  }

	  //-------------------------------------------------------------------------
	  public LegalEntityDiscountingProvider discountingProvider()
	  {
		return discountingProvider_Renamed;
	  }

	  //------------------------- AUTOGENERATED START -------------------------
	  /// <summary>
	  /// The meta-bean for {@code DefaultLegalEntityDiscountingMarketData}.
	  /// </summary>
	  private static readonly TypedMetaBean<DefaultLegalEntityDiscountingMarketData> META_BEAN = LightMetaBean.of(typeof(DefaultLegalEntityDiscountingMarketData), MethodHandles.lookup(), new string[] {"lookup", "marketData"}, new object[0]);

	  /// <summary>
	  /// The meta-bean for {@code DefaultLegalEntityDiscountingMarketData}. </summary>
	  /// <returns> the meta-bean, not null </returns>
	  public static TypedMetaBean<DefaultLegalEntityDiscountingMarketData> meta()
	  {
		return META_BEAN;
	  }

	  static DefaultLegalEntityDiscountingMarketData()
	  {
		MetaBean.register(META_BEAN);
	  }

	  /// <summary>
	  /// The serialization version id.
	  /// </summary>
	  private const long serialVersionUID = 1L;

	  public override TypedMetaBean<DefaultLegalEntityDiscountingMarketData> metaBean()
	  {
		return META_BEAN;
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the lookup. </summary>
	  /// <returns> the value of the property, not null </returns>
	  public LegalEntityDiscountingMarketDataLookup Lookup
	  {
		  get
		  {
			return lookup;
		  }
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the market data. </summary>
	  /// <returns> the value of the property, not null </returns>
	  public MarketData MarketData
	  {
		  get
		  {
			return marketData;
		  }
	  }

	  //-----------------------------------------------------------------------
	  public override bool Equals(object obj)
	  {
		if (obj == this)
		{
		  return true;
		}
		if (obj != null && obj.GetType() == this.GetType())
		{
		  DefaultLegalEntityDiscountingMarketData other = (DefaultLegalEntityDiscountingMarketData) obj;
		  return JodaBeanUtils.equal(lookup, other.lookup) && JodaBeanUtils.equal(marketData, other.marketData);
		}
		return false;
	  }

	  public override int GetHashCode()
	  {
		int hash = this.GetType().GetHashCode();
		hash = hash * 31 + JodaBeanUtils.GetHashCode(lookup);
		hash = hash * 31 + JodaBeanUtils.GetHashCode(marketData);
		return hash;
	  }

	  public override string ToString()
	  {
		StringBuilder buf = new StringBuilder(96);
		buf.Append("DefaultLegalEntityDiscountingMarketData{");
		buf.Append("lookup").Append('=').Append(lookup).Append(',').Append(' ');
		buf.Append("marketData").Append('=').Append(JodaBeanUtils.ToString(marketData));
		buf.Append('}');
		return buf.ToString();
	  }

	  //-------------------------- AUTOGENERATED END --------------------------
	}

}