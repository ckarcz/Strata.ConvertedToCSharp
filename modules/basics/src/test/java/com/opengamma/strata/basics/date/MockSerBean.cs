using System.Collections.Generic;
using System.Text;

/*
 * Copyright (C) 2014 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
namespace com.opengamma.strata.basics.date
{

	using Bean = org.joda.beans.Bean;
	using JodaBeanUtils = org.joda.beans.JodaBeanUtils;
	using MetaBean = org.joda.beans.MetaBean;
	using TypedMetaBean = org.joda.beans.TypedMetaBean;
	using BeanDefinition = org.joda.beans.gen.BeanDefinition;
	using PropertyDefinition = org.joda.beans.gen.PropertyDefinition;
	using BasicBeanBuilder = org.joda.beans.impl.BasicBeanBuilder;
	using MinimalMetaBean = org.joda.beans.impl.direct.MinimalMetaBean;

	/// <summary>
	/// Mock for serialization testing.
	/// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @BeanDefinition(style = "minimal") public final class MockSerBean implements org.joda.beans.Bean
	public sealed class MockSerBean : Bean
	{
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition private BusinessDayConvention bdConvention;
		private BusinessDayConvention bdConvention;

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition private HolidayCalendar holidayCalendar;
	  private HolidayCalendar holidayCalendar;

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition private DayCount dayCount;
	  private DayCount dayCount;

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition private java.util.List<Object> objects = new java.util.ArrayList<>();
	  private IList<object> objects = new List<object>();

	  //------------------------- AUTOGENERATED START -------------------------
	  /// <summary>
	  /// The meta-bean for {@code MockSerBean}.
	  /// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @SuppressWarnings("unchecked") private static final org.joda.beans.TypedMetaBean<MockSerBean> META_BEAN = org.joda.beans.impl.direct.MinimalMetaBean.of(MockSerBean.class, new String[] { "bdConvention", "holidayCalendar", "dayCount", "objects"}, () -> new org.joda.beans.impl.BasicBeanBuilder<>(new MockSerBean()), java.util.Arrays.asList<System.Func<MockSerBean, Object>>(b -> b.getBdConvention(), b -> b.getHolidayCalendar(), b -> b.getDayCount(), b -> b.getObjects()), java.util.Arrays.asList<System.Action<MockSerBean, Object>>((b, v) -> b.setBdConvention((BusinessDayConvention) v), (b, v) -> b.setHolidayCalendar((HolidayCalendar) v), (b, v) -> b.setDayCount((DayCount) v), (b, v) -> b.setObjects((java.util.List<Object>) v)));
	  private static readonly TypedMetaBean<MockSerBean> META_BEAN = MinimalMetaBean.of(typeof(MockSerBean), new string[] {"bdConvention", "holidayCalendar", "dayCount", "objects"}, () => new BasicBeanBuilder<MockSerBean>(new MockSerBean()), Arrays.asList<System.Func<MockSerBean, object>>(b => b.BdConvention, b => b.HolidayCalendar, b => b.DayCount, b => b.Objects), Arrays.asList<System.Action<MockSerBean, object>>((b, v) => b.setBdConvention((BusinessDayConvention) v), (b, v) => b.setHolidayCalendar((HolidayCalendar) v), (b, v) => b.setDayCount((DayCount) v), (b, v) => b.setObjects((IList<object>) v)));

	  /// <summary>
	  /// The meta-bean for {@code MockSerBean}. </summary>
	  /// <returns> the meta-bean, not null </returns>
	  public static TypedMetaBean<MockSerBean> meta()
	  {
		return META_BEAN;
	  }

	  static MockSerBean()
	  {
		MetaBean.register(META_BEAN);
	  }

	  public override TypedMetaBean<MockSerBean> metaBean()
	  {
		return META_BEAN;
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the bdConvention. </summary>
	  /// <returns> the value of the property </returns>
	  public BusinessDayConvention BdConvention
	  {
		  get
		  {
			return bdConvention;
		  }
		  set
		  {
			this.bdConvention = value;
		  }
	  }


	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the holidayCalendar. </summary>
	  /// <returns> the value of the property </returns>
	  public HolidayCalendar HolidayCalendar
	  {
		  get
		  {
			return holidayCalendar;
		  }
		  set
		  {
			this.holidayCalendar = value;
		  }
	  }


	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the dayCount. </summary>
	  /// <returns> the value of the property </returns>
	  public DayCount DayCount
	  {
		  get
		  {
			return dayCount;
		  }
		  set
		  {
			this.dayCount = value;
		  }
	  }


	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the objects. </summary>
	  /// <returns> the value of the property </returns>
	  public IList<object> Objects
	  {
		  get
		  {
			return objects;
		  }
		  set
		  {
			this.objects = value;
		  }
	  }


	  //-----------------------------------------------------------------------
	  public override MockSerBean clone()
	  {
		return JodaBeanUtils.cloneAlways(this);
	  }

	  public override bool Equals(object obj)
	  {
		if (obj == this)
		{
		  return true;
		}
		if (obj != null && obj.GetType() == this.GetType())
		{
		  MockSerBean other = (MockSerBean) obj;
		  return JodaBeanUtils.equal(BdConvention, other.BdConvention) && JodaBeanUtils.equal(HolidayCalendar, other.HolidayCalendar) && JodaBeanUtils.equal(DayCount, other.DayCount) && JodaBeanUtils.equal(Objects, other.Objects);
		}
		return false;
	  }

	  public override int GetHashCode()
	  {
		int hash = this.GetType().GetHashCode();
		hash = hash * 31 + JodaBeanUtils.GetHashCode(BdConvention);
		hash = hash * 31 + JodaBeanUtils.GetHashCode(HolidayCalendar);
		hash = hash * 31 + JodaBeanUtils.GetHashCode(DayCount);
		hash = hash * 31 + JodaBeanUtils.GetHashCode(Objects);
		return hash;
	  }

	  public override string ToString()
	  {
		StringBuilder buf = new StringBuilder(160);
		buf.Append("MockSerBean{");
		buf.Append("bdConvention").Append('=').Append(BdConvention).Append(',').Append(' ');
		buf.Append("holidayCalendar").Append('=').Append(HolidayCalendar).Append(',').Append(' ');
		buf.Append("dayCount").Append('=').Append(DayCount).Append(',').Append(' ');
		buf.Append("objects").Append('=').Append(JodaBeanUtils.ToString(Objects));
		buf.Append('}');
		return buf.ToString();
	  }

	  //-------------------------- AUTOGENERATED END --------------------------
	}

}