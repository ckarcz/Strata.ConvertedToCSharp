using System;
using System.Collections.Generic;
using System.Text;

/*
 * Copyright (C) 2015 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
namespace com.opengamma.strata.market.observable
{

	using Bean = org.joda.beans.Bean;
	using BeanBuilder = org.joda.beans.BeanBuilder;
	using ImmutableBean = org.joda.beans.ImmutableBean;
	using JodaBeanUtils = org.joda.beans.JodaBeanUtils;
	using MetaBean = org.joda.beans.MetaBean;
	using MetaProperty = org.joda.beans.MetaProperty;
	using BeanDefinition = org.joda.beans.gen.BeanDefinition;
	using PropertyDefinition = org.joda.beans.gen.PropertyDefinition;
	using DirectMetaBean = org.joda.beans.impl.direct.DirectMetaBean;
	using DirectMetaProperty = org.joda.beans.impl.direct.DirectMetaProperty;
	using DirectMetaPropertyMap = org.joda.beans.impl.direct.DirectMetaPropertyMap;
	using DirectPrivateBeanBuilder = org.joda.beans.impl.direct.DirectPrivateBeanBuilder;

	using StandardId = com.opengamma.strata.basics.StandardId;
	using DoubleArray = com.opengamma.strata.collect.array.DoubleArray;
	using FieldName = com.opengamma.strata.data.FieldName;
	using MarketDataBox = com.opengamma.strata.data.scenario.MarketDataBox;
	using ScenarioMarketDataId = com.opengamma.strata.data.scenario.ScenarioMarketDataId;

	/// <summary>
	/// An identifier identifying a <seealso cref="QuoteScenarioArray"/> containing values for a piece
	/// of quoted market data in multiple scenarios.
	/// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @BeanDefinition(builderScope = "private", cacheHashCode = true) public final class QuoteScenarioArrayId implements com.opengamma.strata.data.scenario.ScenarioMarketDataId<double, QuoteScenarioArray>, org.joda.beans.ImmutableBean, java.io.Serializable
	[Serializable]
	public sealed class QuoteScenarioArrayId : ScenarioMarketDataId<double, QuoteScenarioArray>, ImmutableBean
	{
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull") private final QuoteId id;
		private readonly QuoteId id;

	  /// <summary>
	  /// Returns a key identifying the market data with the specified ID and field name.
	  /// </summary>
	  /// <param name="id">  the ID of the quote </param>
	  /// <param name="fieldName">  the field name of the market data record containing the quote data </param>
	  /// <returns> a key identifying the market data with the specified ID and field name </returns>
	  public static QuoteScenarioArrayId of(StandardId id, FieldName fieldName)
	  {
		return new QuoteScenarioArrayId(QuoteId.of(id, fieldName));
	  }

	  /// <summary>
	  /// Returns a key identifying the same market data as the quote key.
	  /// </summary>
	  /// <param name="quoteId">  key identifying the quote </param>
	  /// <returns> a key identifying the same market data as the quote key </returns>
	  public static QuoteScenarioArrayId of(QuoteId quoteId)
	  {
		return new QuoteScenarioArrayId(quoteId);
	  }

	  public QuoteId MarketDataId
	  {
		  get
		  {
			return id;
		  }
	  }

	  public Type<QuoteScenarioArray> ScenarioMarketDataType
	  {
		  get
		  {
			return typeof(QuoteScenarioArray);
		  }
	  }

	  public QuoteScenarioArray createScenarioValue(MarketDataBox<double> marketDataBox, int scenarioCount)
	  {
		return QuoteScenarioArray.of(DoubleArray.of(scenarioCount, i => marketDataBox.getValue(i)));
	  }

	  //------------------------- AUTOGENERATED START -------------------------
	  /// <summary>
	  /// The meta-bean for {@code QuoteScenarioArrayId}. </summary>
	  /// <returns> the meta-bean, not null </returns>
	  public static QuoteScenarioArrayId.Meta meta()
	  {
		return QuoteScenarioArrayId.Meta.INSTANCE;
	  }

	  static QuoteScenarioArrayId()
	  {
		MetaBean.register(QuoteScenarioArrayId.Meta.INSTANCE);
	  }

	  /// <summary>
	  /// The serialization version id.
	  /// </summary>
	  private const long serialVersionUID = 1L;

	  /// <summary>
	  /// The cached hash code, using the racy single-check idiom.
	  /// </summary>
	  [NonSerialized]
	  private int cacheHashCode;

	  private QuoteScenarioArrayId(QuoteId id)
	  {
		JodaBeanUtils.notNull(id, "id");
		this.id = id;
	  }

	  public override QuoteScenarioArrayId.Meta metaBean()
	  {
		return QuoteScenarioArrayId.Meta.INSTANCE;
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the market data key identifying the quote. </summary>
	  /// <returns> the value of the property, not null </returns>
	  public QuoteId Id
	  {
		  get
		  {
			return id;
		  }
	  }

	  //-----------------------------------------------------------------------
	  public override bool Equals(object obj)
	  {
		if (obj == this)
		{
		  return true;
		}
		if (obj != null && obj.GetType() == this.GetType())
		{
		  QuoteScenarioArrayId other = (QuoteScenarioArrayId) obj;
		  return JodaBeanUtils.equal(id, other.id);
		}
		return false;
	  }

	  public override int GetHashCode()
	  {
		int hash = cacheHashCode;
		if (hash == 0)
		{
		  hash = this.GetType().GetHashCode();
		  hash = hash * 31 + JodaBeanUtils.GetHashCode(id);
		  cacheHashCode = hash;
		}
		return hash;
	  }

	  public override string ToString()
	  {
		StringBuilder buf = new StringBuilder(64);
		buf.Append("QuoteScenarioArrayId{");
		buf.Append("id").Append('=').Append(JodaBeanUtils.ToString(id));
		buf.Append('}');
		return buf.ToString();
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// The meta-bean for {@code QuoteScenarioArrayId}.
	  /// </summary>
	  public sealed class Meta : DirectMetaBean
	  {
		  internal bool InstanceFieldsInitialized = false;

		  internal void InitializeInstanceFields()
		  {
			  id_Renamed = DirectMetaProperty.ofImmutable(this, "id", typeof(QuoteScenarioArrayId), typeof(QuoteId));
			  metaPropertyMap$ = new DirectMetaPropertyMap(this, null, "id");
		  }

		/// <summary>
		/// The singleton instance of the meta-bean.
		/// </summary>
		internal static readonly Meta INSTANCE = new Meta();

		/// <summary>
		/// The meta-property for the {@code id} property.
		/// </summary>
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal MetaProperty<QuoteId> id_Renamed;
		/// <summary>
		/// The meta-properties.
		/// </summary>
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: private final java.util.Map<String, org.joda.beans.MetaProperty<?>> metaPropertyMap$ = new org.joda.beans.impl.direct.DirectMetaPropertyMap(this, null, "id");
		internal IDictionary<string, MetaProperty<object>> metaPropertyMap$;

		/// <summary>
		/// Restricted constructor.
		/// </summary>
		internal Meta()
		{
			if (!InstanceFieldsInitialized)
			{
				InitializeInstanceFields();
				InstanceFieldsInitialized = true;
			}
		}

//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: @Override protected org.joda.beans.MetaProperty<?> metaPropertyGet(String propertyName)
		protected internal override MetaProperty<object> metaPropertyGet(string propertyName)
		{
		  switch (propertyName.GetHashCode())
		  {
			case 3355: // id
			  return id_Renamed;
		  }
		  return base.metaPropertyGet(propertyName);
		}

//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: @Override public org.joda.beans.BeanBuilder<? extends QuoteScenarioArrayId> builder()
		public override BeanBuilder<QuoteScenarioArrayId> builder()
		{
		  return new QuoteScenarioArrayId.Builder();
		}

		public override Type beanType()
		{
		  return typeof(QuoteScenarioArrayId);
		}

//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: @Override public java.util.Map<String, org.joda.beans.MetaProperty<?>> metaPropertyMap()
		public override IDictionary<string, MetaProperty<object>> metaPropertyMap()
		{
		  return metaPropertyMap$;
		}

		//-----------------------------------------------------------------------
		/// <summary>
		/// The meta-property for the {@code id} property. </summary>
		/// <returns> the meta-property, not null </returns>
		public MetaProperty<QuoteId> id()
		{
		  return id_Renamed;
		}

		//-----------------------------------------------------------------------
		protected internal override object propertyGet(Bean bean, string propertyName, bool quiet)
		{
		  switch (propertyName.GetHashCode())
		  {
			case 3355: // id
			  return ((QuoteScenarioArrayId) bean).Id;
		  }
		  return base.propertyGet(bean, propertyName, quiet);
		}

		protected internal override void propertySet(Bean bean, string propertyName, object newValue, bool quiet)
		{
		  metaProperty(propertyName);
		  if (quiet)
		  {
			return;
		  }
		  throw new System.NotSupportedException("Property cannot be written: " + propertyName);
		}

	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// The bean-builder for {@code QuoteScenarioArrayId}.
	  /// </summary>
	  private sealed class Builder : DirectPrivateBeanBuilder<QuoteScenarioArrayId>
	  {

		internal QuoteId id;

		/// <summary>
		/// Restricted constructor.
		/// </summary>
		internal Builder()
		{
		}

		//-----------------------------------------------------------------------
		public override object get(string propertyName)
		{
		  switch (propertyName.GetHashCode())
		  {
			case 3355: // id
			  return id;
			default:
			  throw new NoSuchElementException("Unknown property: " + propertyName);
		  }
		}

		public override Builder set(string propertyName, object newValue)
		{
		  switch (propertyName.GetHashCode())
		  {
			case 3355: // id
			  this.id = (QuoteId) newValue;
			  break;
			default:
			  throw new NoSuchElementException("Unknown property: " + propertyName);
		  }
		  return this;
		}

		public override QuoteScenarioArrayId build()
		{
		  return new QuoteScenarioArrayId(id);
		}

		//-----------------------------------------------------------------------
		public override string ToString()
		{
		  StringBuilder buf = new StringBuilder(64);
		  buf.Append("QuoteScenarioArrayId.Builder{");
		  buf.Append("id").Append('=').Append(JodaBeanUtils.ToString(id));
		  buf.Append('}');
		  return buf.ToString();
		}

	  }

	  //-------------------------- AUTOGENERATED END --------------------------
	}

}