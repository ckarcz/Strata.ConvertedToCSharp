using System;
using System.Collections.Generic;
using System.Text;

/*
 * Copyright (C) 2016 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
namespace com.opengamma.strata.product.payment
{

	using Bean = org.joda.beans.Bean;
	using ImmutableBean = org.joda.beans.ImmutableBean;
	using JodaBeanUtils = org.joda.beans.JodaBeanUtils;
	using MetaBean = org.joda.beans.MetaBean;
	using MetaProperty = org.joda.beans.MetaProperty;
	using BeanDefinition = org.joda.beans.gen.BeanDefinition;
	using PropertyDefinition = org.joda.beans.gen.PropertyDefinition;
	using DirectFieldsBeanBuilder = org.joda.beans.impl.direct.DirectFieldsBeanBuilder;
	using DirectMetaBean = org.joda.beans.impl.direct.DirectMetaBean;
	using DirectMetaProperty = org.joda.beans.impl.direct.DirectMetaProperty;
	using DirectMetaPropertyMap = org.joda.beans.impl.direct.DirectMetaPropertyMap;

	using ReferenceData = com.opengamma.strata.basics.ReferenceData;
	using Currency = com.opengamma.strata.basics.currency.Currency;
	using Payment = com.opengamma.strata.basics.currency.Payment;

	/// <summary>
	/// A bullet payment, resolved for pricing.
	/// <para>
	/// This is the resolved form of <seealso cref="BulletPayment"/> and is an input to the pricers.
	/// Applications will typically create a {@code ResolvedBulletPayment} from a {@code BulletPayment}
	/// using <seealso cref="BulletPayment#resolve(ReferenceData)"/>.
	/// </para>
	/// <para>
	/// A {@code ResolvedBulletPayment} is bound to data that changes over time, such as holiday calendars.
	/// If the data changes, such as the addition of a new holiday, the resolved form will not be updated.
	/// Care must be taken when placing the resolved form in a cache or persistence layer.
	/// </para>
	/// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @BeanDefinition public final class ResolvedBulletPayment implements com.opengamma.strata.product.ResolvedProduct, org.joda.beans.ImmutableBean, java.io.Serializable
	[Serializable]
	public sealed class ResolvedBulletPayment : ResolvedProduct, ImmutableBean
	{
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull") private final com.opengamma.strata.basics.currency.Payment payment;
		private readonly Payment payment;

	  //-------------------------------------------------------------------------
	  /// <summary>
	  /// Obtains an instance of a resolved bullet payment.
	  /// </summary>
	  /// <param name="payment">  the payment </param>
	  /// <returns> the resolved bullet payment </returns>
	  public static ResolvedBulletPayment of(Payment payment)
	  {
		return new ResolvedBulletPayment(payment);
	  }

	  //-------------------------------------------------------------------------
	  /// <summary>
	  /// Gets the currency of this payment.
	  /// </summary>
	  /// <returns> the payment currency </returns>
	  public Currency Currency
	  {
		  get
		  {
			return payment.Currency;
		  }
	  }

	  //------------------------- AUTOGENERATED START -------------------------
	  /// <summary>
	  /// The meta-bean for {@code ResolvedBulletPayment}. </summary>
	  /// <returns> the meta-bean, not null </returns>
	  public static ResolvedBulletPayment.Meta meta()
	  {
		return ResolvedBulletPayment.Meta.INSTANCE;
	  }

	  static ResolvedBulletPayment()
	  {
		MetaBean.register(ResolvedBulletPayment.Meta.INSTANCE);
	  }

	  /// <summary>
	  /// The serialization version id.
	  /// </summary>
	  private const long serialVersionUID = 1L;

	  /// <summary>
	  /// Returns a builder used to create an instance of the bean. </summary>
	  /// <returns> the builder, not null </returns>
	  public static ResolvedBulletPayment.Builder builder()
	  {
		return new ResolvedBulletPayment.Builder();
	  }

	  private ResolvedBulletPayment(Payment payment)
	  {
		JodaBeanUtils.notNull(payment, "payment");
		this.payment = payment;
	  }

	  public override ResolvedBulletPayment.Meta metaBean()
	  {
		return ResolvedBulletPayment.Meta.INSTANCE;
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the payment to be made. </summary>
	  /// <returns> the value of the property, not null </returns>
	  public Payment Payment
	  {
		  get
		  {
			return payment;
		  }
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Returns a builder that allows this bean to be mutated. </summary>
	  /// <returns> the mutable builder, not null </returns>
	  public Builder toBuilder()
	  {
		return new Builder(this);
	  }

	  public override bool Equals(object obj)
	  {
		if (obj == this)
		{
		  return true;
		}
		if (obj != null && obj.GetType() == this.GetType())
		{
		  ResolvedBulletPayment other = (ResolvedBulletPayment) obj;
		  return JodaBeanUtils.equal(payment, other.payment);
		}
		return false;
	  }

	  public override int GetHashCode()
	  {
		int hash = this.GetType().GetHashCode();
		hash = hash * 31 + JodaBeanUtils.GetHashCode(payment);
		return hash;
	  }

	  public override string ToString()
	  {
		StringBuilder buf = new StringBuilder(64);
		buf.Append("ResolvedBulletPayment{");
		buf.Append("payment").Append('=').Append(JodaBeanUtils.ToString(payment));
		buf.Append('}');
		return buf.ToString();
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// The meta-bean for {@code ResolvedBulletPayment}.
	  /// </summary>
	  public sealed class Meta : DirectMetaBean
	  {
		  internal bool InstanceFieldsInitialized = false;

		  internal void InitializeInstanceFields()
		  {
			  payment_Renamed = DirectMetaProperty.ofImmutable(this, "payment", typeof(ResolvedBulletPayment), typeof(Payment));
			  metaPropertyMap$ = new DirectMetaPropertyMap(this, null, "payment");
		  }

		/// <summary>
		/// The singleton instance of the meta-bean.
		/// </summary>
		internal static readonly Meta INSTANCE = new Meta();

		/// <summary>
		/// The meta-property for the {@code payment} property.
		/// </summary>
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal MetaProperty<Payment> payment_Renamed;
		/// <summary>
		/// The meta-properties.
		/// </summary>
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: private final java.util.Map<String, org.joda.beans.MetaProperty<?>> metaPropertyMap$ = new org.joda.beans.impl.direct.DirectMetaPropertyMap(this, null, "payment");
		internal IDictionary<string, MetaProperty<object>> metaPropertyMap$;

		/// <summary>
		/// Restricted constructor.
		/// </summary>
		internal Meta()
		{
			if (!InstanceFieldsInitialized)
			{
				InitializeInstanceFields();
				InstanceFieldsInitialized = true;
			}
		}

//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: @Override protected org.joda.beans.MetaProperty<?> metaPropertyGet(String propertyName)
		protected internal override MetaProperty<object> metaPropertyGet(string propertyName)
		{
		  switch (propertyName.GetHashCode())
		  {
			case -786681338: // payment
			  return payment_Renamed;
		  }
		  return base.metaPropertyGet(propertyName);
		}

		public override ResolvedBulletPayment.Builder builder()
		{
		  return new ResolvedBulletPayment.Builder();
		}

		public override Type beanType()
		{
		  return typeof(ResolvedBulletPayment);
		}

//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: @Override public java.util.Map<String, org.joda.beans.MetaProperty<?>> metaPropertyMap()
		public override IDictionary<string, MetaProperty<object>> metaPropertyMap()
		{
		  return metaPropertyMap$;
		}

		//-----------------------------------------------------------------------
		/// <summary>
		/// The meta-property for the {@code payment} property. </summary>
		/// <returns> the meta-property, not null </returns>
		public MetaProperty<Payment> payment()
		{
		  return payment_Renamed;
		}

		//-----------------------------------------------------------------------
		protected internal override object propertyGet(Bean bean, string propertyName, bool quiet)
		{
		  switch (propertyName.GetHashCode())
		  {
			case -786681338: // payment
			  return ((ResolvedBulletPayment) bean).Payment;
		  }
		  return base.propertyGet(bean, propertyName, quiet);
		}

		protected internal override void propertySet(Bean bean, string propertyName, object newValue, bool quiet)
		{
		  metaProperty(propertyName);
		  if (quiet)
		  {
			return;
		  }
		  throw new System.NotSupportedException("Property cannot be written: " + propertyName);
		}

	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// The bean-builder for {@code ResolvedBulletPayment}.
	  /// </summary>
	  public sealed class Builder : DirectFieldsBeanBuilder<ResolvedBulletPayment>
	  {

//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal Payment payment_Renamed;

		/// <summary>
		/// Restricted constructor.
		/// </summary>
		internal Builder()
		{
		}

		/// <summary>
		/// Restricted copy constructor. </summary>
		/// <param name="beanToCopy">  the bean to copy from, not null </param>
		internal Builder(ResolvedBulletPayment beanToCopy)
		{
		  this.payment_Renamed = beanToCopy.Payment;
		}

		//-----------------------------------------------------------------------
		public override object get(string propertyName)
		{
		  switch (propertyName.GetHashCode())
		  {
			case -786681338: // payment
			  return payment_Renamed;
			default:
			  throw new NoSuchElementException("Unknown property: " + propertyName);
		  }
		}

		public override Builder set(string propertyName, object newValue)
		{
		  switch (propertyName.GetHashCode())
		  {
			case -786681338: // payment
			  this.payment_Renamed = (Payment) newValue;
			  break;
			default:
			  throw new NoSuchElementException("Unknown property: " + propertyName);
		  }
		  return this;
		}

		public override Builder set<T1>(MetaProperty<T1> property, object value)
		{
		  base.set(property, value);
		  return this;
		}

		public override ResolvedBulletPayment build()
		{
		  return new ResolvedBulletPayment(payment_Renamed);
		}

		//-----------------------------------------------------------------------
		/// <summary>
		/// Sets the payment to be made. </summary>
		/// <param name="payment">  the new value, not null </param>
		/// <returns> this, for chaining, not null </returns>
		public Builder payment(Payment payment)
		{
		  JodaBeanUtils.notNull(payment, "payment");
		  this.payment_Renamed = payment;
		  return this;
		}

		//-----------------------------------------------------------------------
		public override string ToString()
		{
		  StringBuilder buf = new StringBuilder(64);
		  buf.Append("ResolvedBulletPayment.Builder{");
		  buf.Append("payment").Append('=').Append(JodaBeanUtils.ToString(payment_Renamed));
		  buf.Append('}');
		  return buf.ToString();
		}

	  }

	  //-------------------------- AUTOGENERATED END --------------------------
	}

}