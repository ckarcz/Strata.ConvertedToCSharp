using System;
using System.Text;

/*
 * Copyright (C) 2018 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
namespace com.opengamma.strata.product.bond
{

	using ImmutableBean = org.joda.beans.ImmutableBean;
	using JodaBeanUtils = org.joda.beans.JodaBeanUtils;
	using MetaBean = org.joda.beans.MetaBean;
	using TypedMetaBean = org.joda.beans.TypedMetaBean;
	using BeanDefinition = org.joda.beans.gen.BeanDefinition;
	using PropertyDefinition = org.joda.beans.gen.PropertyDefinition;
	using LightMetaBean = org.joda.beans.impl.light.LightMetaBean;

	using ArgChecker = com.opengamma.strata.collect.ArgChecker;

	/// <summary>
	/// The settlement details of a fixed coupon bond trade.
	/// <para>
	/// When a trade in a fixed coupon bond occurs there is an agreed settlement process.
	/// This class captures details of that process for the purpose of pricing.
	/// </para>
	/// <para>
	/// Once the trade has settled, end of day processing typically aggregates the trades into positions.
	/// As a position combines multiple trades at different prices, the information in this class does not apply.
	/// 
	/// <h4>Price</h4>
	/// Strata uses <i>decimal prices</i> for bonds in the trade model, pricers and market data.
	/// For example, a price of 99.32% is represented in Strata by 0.9932.
	/// </para>
	/// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @BeanDefinition(style = "light") public final class ResolvedFixedCouponBondSettlement implements org.joda.beans.ImmutableBean, java.io.Serializable
	[Serializable]
	public sealed class ResolvedFixedCouponBondSettlement : ImmutableBean
	{
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull") private final java.time.LocalDate settlementDate;
		private readonly LocalDate settlementDate;
	  /// <summary>
	  /// The <i>clean</i> price at which the bond was traded.
	  /// <para>
	  /// The "clean" price excludes any accrued interest.
	  /// </para>
	  /// <para>
	  /// Strata uses <i>decimal prices</i> for bonds in the trade model, pricers and market data.
	  /// For example, a price of 99.32% is represented in Strata by 0.9932.
	  /// </para>
	  /// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "ArgChecker.notNegative") private final double price;
	  private readonly double price;

	  //-------------------------------------------------------------------------
	  /// <summary>
	  /// Obtains an instance from the settlement date and price.
	  /// </summary>
	  /// <param name="settlementDate">  the settlement date </param>
	  /// <param name="price">  the price at which the trade was agreed </param>
	  /// <returns> the settlement information </returns>
	  public static ResolvedFixedCouponBondSettlement of(LocalDate settlementDate, double price)
	  {
		return new ResolvedFixedCouponBondSettlement(settlementDate, price);
	  }

	  //------------------------- AUTOGENERATED START -------------------------
	  /// <summary>
	  /// The meta-bean for {@code ResolvedFixedCouponBondSettlement}.
	  /// </summary>
	  private static readonly TypedMetaBean<ResolvedFixedCouponBondSettlement> META_BEAN = LightMetaBean.of(typeof(ResolvedFixedCouponBondSettlement), MethodHandles.lookup(), new string[] {"settlementDate", "price"}, new object[0]);

	  /// <summary>
	  /// The meta-bean for {@code ResolvedFixedCouponBondSettlement}. </summary>
	  /// <returns> the meta-bean, not null </returns>
	  public static TypedMetaBean<ResolvedFixedCouponBondSettlement> meta()
	  {
		return META_BEAN;
	  }

	  static ResolvedFixedCouponBondSettlement()
	  {
		MetaBean.register(META_BEAN);
	  }

	  /// <summary>
	  /// The serialization version id.
	  /// </summary>
	  private const long serialVersionUID = 1L;

	  private ResolvedFixedCouponBondSettlement(LocalDate settlementDate, double price)
	  {
		JodaBeanUtils.notNull(settlementDate, "settlementDate");
		ArgChecker.notNegative(price, "price");
		this.settlementDate = settlementDate;
		this.price = price;
	  }

	  public override TypedMetaBean<ResolvedFixedCouponBondSettlement> metaBean()
	  {
		return META_BEAN;
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the settlement date. </summary>
	  /// <returns> the value of the property, not null </returns>
	  public LocalDate SettlementDate
	  {
		  get
		  {
			return settlementDate;
		  }
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the <i>clean</i> price at which the bond was traded.
	  /// <para>
	  /// The "clean" price excludes any accrued interest.
	  /// </para>
	  /// <para>
	  /// Strata uses <i>decimal prices</i> for bonds in the trade model, pricers and market data.
	  /// For example, a price of 99.32% is represented in Strata by 0.9932.
	  /// </para>
	  /// </summary>
	  /// <returns> the value of the property </returns>
	  public double Price
	  {
		  get
		  {
			return price;
		  }
	  }

	  //-----------------------------------------------------------------------
	  public override bool Equals(object obj)
	  {
		if (obj == this)
		{
		  return true;
		}
		if (obj != null && obj.GetType() == this.GetType())
		{
		  ResolvedFixedCouponBondSettlement other = (ResolvedFixedCouponBondSettlement) obj;
		  return JodaBeanUtils.equal(settlementDate, other.settlementDate) && JodaBeanUtils.equal(price, other.price);
		}
		return false;
	  }

	  public override int GetHashCode()
	  {
		int hash = this.GetType().GetHashCode();
		hash = hash * 31 + JodaBeanUtils.GetHashCode(settlementDate);
		hash = hash * 31 + JodaBeanUtils.GetHashCode(price);
		return hash;
	  }

	  public override string ToString()
	  {
		StringBuilder buf = new StringBuilder(96);
		buf.Append("ResolvedFixedCouponBondSettlement{");
		buf.Append("settlementDate").Append('=').Append(settlementDate).Append(',').Append(' ');
		buf.Append("price").Append('=').Append(JodaBeanUtils.ToString(price));
		buf.Append('}');
		return buf.ToString();
	  }

	  //-------------------------- AUTOGENERATED END --------------------------
	}

}