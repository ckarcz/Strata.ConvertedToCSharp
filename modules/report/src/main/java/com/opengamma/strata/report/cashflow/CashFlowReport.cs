using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

/*
 * Copyright (C) 2015 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
namespace com.opengamma.strata.report.cashflow
{

	using Bean = org.joda.beans.Bean;
	using ImmutableBean = org.joda.beans.ImmutableBean;
	using JodaBeanUtils = org.joda.beans.JodaBeanUtils;
	using MetaBean = org.joda.beans.MetaBean;
	using MetaProperty = org.joda.beans.MetaProperty;
	using BeanDefinition = org.joda.beans.gen.BeanDefinition;
	using PropertyDefinition = org.joda.beans.gen.PropertyDefinition;
	using DirectFieldsBeanBuilder = org.joda.beans.impl.direct.DirectFieldsBeanBuilder;
	using DirectMetaBean = org.joda.beans.impl.direct.DirectMetaBean;
	using DirectMetaProperty = org.joda.beans.impl.direct.DirectMetaProperty;
	using DirectMetaPropertyMap = org.joda.beans.impl.direct.DirectMetaPropertyMap;

	using ImmutableList = com.google.common.collect.ImmutableList;
	using ImmutableTable = com.google.common.collect.ImmutableTable;
	using Table = com.google.common.collect.Table;
	using ExplainKey = com.opengamma.strata.market.explain.ExplainKey;

	/// <summary>
	/// Represents a cash flow report.
	/// <para>
	/// This consists of fields captured as part of a calculation. The rows are generally ordered
	/// through time, and neighbouring rows may show related flows - for example, a payment period
	/// containing multiple resets.
	/// </para>
	/// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @BeanDefinition public final class CashFlowReport implements com.opengamma.strata.report.Report, org.joda.beans.ImmutableBean
	public sealed class CashFlowReport : Report, ImmutableBean
	{
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull", overrideGet = true) private final java.time.LocalDate valuationDate;
		private readonly LocalDate valuationDate;
	  /// <summary>
	  /// The instant at which the report was run.
	  /// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull", overrideGet = true) private final java.time.Instant runInstant;
	  private readonly Instant runInstant;
	  /// <summary>
	  /// The keys corresponding to the columns.
	  /// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull") private final com.google.common.collect.ImmutableList<com.opengamma.strata.market.explain.ExplainKey<?>> columnKeys;
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
	  private readonly ImmutableList<ExplainKey<object>> columnKeys;
	  /// <summary>
	  /// The column headers.
	  /// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull", overrideGet = true) private final com.google.common.collect.ImmutableList<String> columnHeaders;
	  private readonly ImmutableList<string> columnHeaders;
	  /// <summary>
	  /// The cashflow data table.
	  /// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @PropertyDefinition(validate = "notNull") private final com.google.common.collect.ImmutableTable<int, int, Object> data;
	  private readonly ImmutableTable<int, int, object> data;

	  //-------------------------------------------------------------------------
	  public int RowCount
	  {
		  get
		  {
			return data.rowKeySet().size();
		  }
	  }

	  public void writeCsv(Stream @out)
	  {
		CashFlowReportFormatter.INSTANCE.writeCsv(this, @out);
	  }

	  public void writeAsciiTable(Stream @out)
	  {
		CashFlowReportFormatter.INSTANCE.writeAsciiTable(this, @out);
	  }

	  //------------------------- AUTOGENERATED START -------------------------
	  /// <summary>
	  /// The meta-bean for {@code CashFlowReport}. </summary>
	  /// <returns> the meta-bean, not null </returns>
	  public static CashFlowReport.Meta meta()
	  {
		return CashFlowReport.Meta.INSTANCE;
	  }

	  static CashFlowReport()
	  {
		MetaBean.register(CashFlowReport.Meta.INSTANCE);
	  }

	  /// <summary>
	  /// Returns a builder used to create an instance of the bean. </summary>
	  /// <returns> the builder, not null </returns>
	  public static CashFlowReport.Builder builder()
	  {
		return new CashFlowReport.Builder();
	  }

	  private CashFlowReport<T1>(LocalDate valuationDate, Instant runInstant, IList<T1> columnKeys, IList<string> columnHeaders, Table<int, int, object> data)
	  {
		JodaBeanUtils.notNull(valuationDate, "valuationDate");
		JodaBeanUtils.notNull(runInstant, "runInstant");
		JodaBeanUtils.notNull(columnKeys, "columnKeys");
		JodaBeanUtils.notNull(columnHeaders, "columnHeaders");
		JodaBeanUtils.notNull(data, "data");
		this.valuationDate = valuationDate;
		this.runInstant = runInstant;
		this.columnKeys = ImmutableList.copyOf(columnKeys);
		this.columnHeaders = ImmutableList.copyOf(columnHeaders);
		this.data = ImmutableTable.copyOf(data);
	  }

	  public override CashFlowReport.Meta metaBean()
	  {
		return CashFlowReport.Meta.INSTANCE;
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the valuation date. </summary>
	  /// <returns> the value of the property, not null </returns>
	  public LocalDate ValuationDate
	  {
		  get
		  {
			return valuationDate;
		  }
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the instant at which the report was run. </summary>
	  /// <returns> the value of the property, not null </returns>
	  public Instant RunInstant
	  {
		  get
		  {
			return runInstant;
		  }
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the keys corresponding to the columns. </summary>
	  /// <returns> the value of the property, not null </returns>
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: public com.google.common.collect.ImmutableList<com.opengamma.strata.market.explain.ExplainKey<?>> getColumnKeys()
	  public ImmutableList<ExplainKey<object>> ColumnKeys
	  {
		  get
		  {
			return columnKeys;
		  }
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the column headers. </summary>
	  /// <returns> the value of the property, not null </returns>
	  public ImmutableList<string> ColumnHeaders
	  {
		  get
		  {
			return columnHeaders;
		  }
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Gets the cashflow data table. </summary>
	  /// <returns> the value of the property, not null </returns>
	  public ImmutableTable<int, int, object> Data
	  {
		  get
		  {
			return data;
		  }
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// Returns a builder that allows this bean to be mutated. </summary>
	  /// <returns> the mutable builder, not null </returns>
	  public Builder toBuilder()
	  {
		return new Builder(this);
	  }

	  public override bool Equals(object obj)
	  {
		if (obj == this)
		{
		  return true;
		}
		if (obj != null && obj.GetType() == this.GetType())
		{
		  CashFlowReport other = (CashFlowReport) obj;
		  return JodaBeanUtils.equal(valuationDate, other.valuationDate) && JodaBeanUtils.equal(runInstant, other.runInstant) && JodaBeanUtils.equal(columnKeys, other.columnKeys) && JodaBeanUtils.equal(columnHeaders, other.columnHeaders) && JodaBeanUtils.equal(data, other.data);
		}
		return false;
	  }

	  public override int GetHashCode()
	  {
		int hash = this.GetType().GetHashCode();
		hash = hash * 31 + JodaBeanUtils.GetHashCode(valuationDate);
		hash = hash * 31 + JodaBeanUtils.GetHashCode(runInstant);
		hash = hash * 31 + JodaBeanUtils.GetHashCode(columnKeys);
		hash = hash * 31 + JodaBeanUtils.GetHashCode(columnHeaders);
		hash = hash * 31 + JodaBeanUtils.GetHashCode(data);
		return hash;
	  }

	  public override string ToString()
	  {
		StringBuilder buf = new StringBuilder(192);
		buf.Append("CashFlowReport{");
		buf.Append("valuationDate").Append('=').Append(valuationDate).Append(',').Append(' ');
		buf.Append("runInstant").Append('=').Append(runInstant).Append(',').Append(' ');
		buf.Append("columnKeys").Append('=').Append(columnKeys).Append(',').Append(' ');
		buf.Append("columnHeaders").Append('=').Append(columnHeaders).Append(',').Append(' ');
		buf.Append("data").Append('=').Append(JodaBeanUtils.ToString(data));
		buf.Append('}');
		return buf.ToString();
	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// The meta-bean for {@code CashFlowReport}.
	  /// </summary>
	  public sealed class Meta : DirectMetaBean
	  {
		  internal bool InstanceFieldsInitialized = false;

		  internal void InitializeInstanceFields()
		  {
			  valuationDate_Renamed = DirectMetaProperty.ofImmutable(this, "valuationDate", typeof(CashFlowReport), typeof(LocalDate));
			  runInstant_Renamed = DirectMetaProperty.ofImmutable(this, "runInstant", typeof(CashFlowReport), typeof(Instant));
			  columnKeys_Renamed = DirectMetaProperty.ofImmutable(this, "columnKeys", typeof(CashFlowReport), (Type) typeof(ImmutableList));
			  columnHeaders_Renamed = DirectMetaProperty.ofImmutable(this, "columnHeaders", typeof(CashFlowReport), (Type) typeof(ImmutableList));
			  data_Renamed = DirectMetaProperty.ofImmutable(this, "data", typeof(CashFlowReport), (Type) typeof(ImmutableTable));
			  metaPropertyMap$ = new DirectMetaPropertyMap(this, null, "valuationDate", "runInstant", "columnKeys", "columnHeaders", "data");
		  }

		/// <summary>
		/// The singleton instance of the meta-bean.
		/// </summary>
		internal static readonly Meta INSTANCE = new Meta();

		/// <summary>
		/// The meta-property for the {@code valuationDate} property.
		/// </summary>
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal MetaProperty<LocalDate> valuationDate_Renamed;
		/// <summary>
		/// The meta-property for the {@code runInstant} property.
		/// </summary>
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal MetaProperty<Instant> runInstant_Renamed;
		/// <summary>
		/// The meta-property for the {@code columnKeys} property.
		/// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @SuppressWarnings({"unchecked", "rawtypes" }) private final org.joda.beans.MetaProperty<com.google.common.collect.ImmutableList<com.opengamma.strata.market.explain.ExplainKey<?>>> columnKeys = org.joda.beans.impl.direct.DirectMetaProperty.ofImmutable(this, "columnKeys", CashFlowReport.class, (Class) com.google.common.collect.ImmutableList.class);
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
		internal MetaProperty<ImmutableList<ExplainKey<object>>> columnKeys_Renamed;
		/// <summary>
		/// The meta-property for the {@code columnHeaders} property.
		/// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @SuppressWarnings({"unchecked", "rawtypes" }) private final org.joda.beans.MetaProperty<com.google.common.collect.ImmutableList<String>> columnHeaders = org.joda.beans.impl.direct.DirectMetaProperty.ofImmutable(this, "columnHeaders", CashFlowReport.class, (Class) com.google.common.collect.ImmutableList.class);
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal MetaProperty<ImmutableList<string>> columnHeaders_Renamed;
		/// <summary>
		/// The meta-property for the {@code data} property.
		/// </summary>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @SuppressWarnings({"unchecked", "rawtypes" }) private final org.joda.beans.MetaProperty<com.google.common.collect.ImmutableTable<int, int, Object>> data = org.joda.beans.impl.direct.DirectMetaProperty.ofImmutable(this, "data", CashFlowReport.class, (Class) com.google.common.collect.ImmutableTable.class);
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal MetaProperty<ImmutableTable<int, int, object>> data_Renamed;
		/// <summary>
		/// The meta-properties.
		/// </summary>
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: private final java.util.Map<String, org.joda.beans.MetaProperty<?>> metaPropertyMap$ = new org.joda.beans.impl.direct.DirectMetaPropertyMap(this, null, "valuationDate", "runInstant", "columnKeys", "columnHeaders", "data");
		internal IDictionary<string, MetaProperty<object>> metaPropertyMap$;

		/// <summary>
		/// Restricted constructor.
		/// </summary>
		internal Meta()
		{
			if (!InstanceFieldsInitialized)
			{
				InitializeInstanceFields();
				InstanceFieldsInitialized = true;
			}
		}

//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: @Override protected org.joda.beans.MetaProperty<?> metaPropertyGet(String propertyName)
		protected internal override MetaProperty<object> metaPropertyGet(string propertyName)
		{
		  switch (propertyName.GetHashCode())
		  {
			case 113107279: // valuationDate
			  return valuationDate_Renamed;
			case 111354070: // runInstant
			  return runInstant_Renamed;
			case -2105746838: // columnKeys
			  return columnKeys_Renamed;
			case 1598220112: // columnHeaders
			  return columnHeaders_Renamed;
			case 3076010: // data
			  return data_Renamed;
		  }
		  return base.metaPropertyGet(propertyName);
		}

		public override CashFlowReport.Builder builder()
		{
		  return new CashFlowReport.Builder();
		}

		public override Type beanType()
		{
		  return typeof(CashFlowReport);
		}

//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: @Override public java.util.Map<String, org.joda.beans.MetaProperty<?>> metaPropertyMap()
		public override IDictionary<string, MetaProperty<object>> metaPropertyMap()
		{
		  return metaPropertyMap$;
		}

		//-----------------------------------------------------------------------
		/// <summary>
		/// The meta-property for the {@code valuationDate} property. </summary>
		/// <returns> the meta-property, not null </returns>
		public MetaProperty<LocalDate> valuationDate()
		{
		  return valuationDate_Renamed;
		}

		/// <summary>
		/// The meta-property for the {@code runInstant} property. </summary>
		/// <returns> the meta-property, not null </returns>
		public MetaProperty<Instant> runInstant()
		{
		  return runInstant_Renamed;
		}

		/// <summary>
		/// The meta-property for the {@code columnKeys} property. </summary>
		/// <returns> the meta-property, not null </returns>
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: public org.joda.beans.MetaProperty<com.google.common.collect.ImmutableList<com.opengamma.strata.market.explain.ExplainKey<?>>> columnKeys()
		public MetaProperty<ImmutableList<ExplainKey<object>>> columnKeys()
		{
		  return columnKeys_Renamed;
		}

		/// <summary>
		/// The meta-property for the {@code columnHeaders} property. </summary>
		/// <returns> the meta-property, not null </returns>
		public MetaProperty<ImmutableList<string>> columnHeaders()
		{
		  return columnHeaders_Renamed;
		}

		/// <summary>
		/// The meta-property for the {@code data} property. </summary>
		/// <returns> the meta-property, not null </returns>
		public MetaProperty<ImmutableTable<int, int, object>> data()
		{
		  return data_Renamed;
		}

		//-----------------------------------------------------------------------
		protected internal override object propertyGet(Bean bean, string propertyName, bool quiet)
		{
		  switch (propertyName.GetHashCode())
		  {
			case 113107279: // valuationDate
			  return ((CashFlowReport) bean).ValuationDate;
			case 111354070: // runInstant
			  return ((CashFlowReport) bean).RunInstant;
			case -2105746838: // columnKeys
			  return ((CashFlowReport) bean).ColumnKeys;
			case 1598220112: // columnHeaders
			  return ((CashFlowReport) bean).ColumnHeaders;
			case 3076010: // data
			  return ((CashFlowReport) bean).Data;
		  }
		  return base.propertyGet(bean, propertyName, quiet);
		}

		protected internal override void propertySet(Bean bean, string propertyName, object newValue, bool quiet)
		{
		  metaProperty(propertyName);
		  if (quiet)
		  {
			return;
		  }
		  throw new System.NotSupportedException("Property cannot be written: " + propertyName);
		}

	  }

	  //-----------------------------------------------------------------------
	  /// <summary>
	  /// The bean-builder for {@code CashFlowReport}.
	  /// </summary>
	  public sealed class Builder : DirectFieldsBeanBuilder<CashFlowReport>
	  {

//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal LocalDate valuationDate_Renamed;
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal Instant runInstant_Renamed;
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: private java.util.List<com.opengamma.strata.market.explain.ExplainKey<?>> columnKeys = com.google.common.collect.ImmutableList.of();
		internal IList<ExplainKey<object>> columnKeys_Renamed = ImmutableList.of();
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal IList<string> columnHeaders_Renamed = ImmutableList.of();
//JAVA TO C# CONVERTER NOTE: Fields cannot have the same name as methods:
		internal Table<int, int, object> data_Renamed = ImmutableTable.of();

		/// <summary>
		/// Restricted constructor.
		/// </summary>
		internal Builder()
		{
		}

		/// <summary>
		/// Restricted copy constructor. </summary>
		/// <param name="beanToCopy">  the bean to copy from, not null </param>
		internal Builder(CashFlowReport beanToCopy)
		{
		  this.valuationDate_Renamed = beanToCopy.ValuationDate;
		  this.runInstant_Renamed = beanToCopy.RunInstant;
		  this.columnKeys_Renamed = beanToCopy.ColumnKeys;
		  this.columnHeaders_Renamed = beanToCopy.ColumnHeaders;
		  this.data_Renamed = beanToCopy.Data;
		}

		//-----------------------------------------------------------------------
		public override object get(string propertyName)
		{
		  switch (propertyName.GetHashCode())
		  {
			case 113107279: // valuationDate
			  return valuationDate_Renamed;
			case 111354070: // runInstant
			  return runInstant_Renamed;
			case -2105746838: // columnKeys
			  return columnKeys_Renamed;
			case 1598220112: // columnHeaders
			  return columnHeaders_Renamed;
			case 3076010: // data
			  return data_Renamed;
			default:
			  throw new NoSuchElementException("Unknown property: " + propertyName);
		  }
		}

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @SuppressWarnings("unchecked") @Override public Builder set(String propertyName, Object newValue)
		public override Builder set(string propertyName, object newValue)
		{
		  switch (propertyName.GetHashCode())
		  {
			case 113107279: // valuationDate
			  this.valuationDate_Renamed = (LocalDate) newValue;
			  break;
			case 111354070: // runInstant
			  this.runInstant_Renamed = (Instant) newValue;
			  break;
			case -2105746838: // columnKeys
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
//ORIGINAL LINE: this.columnKeys = (java.util.List<com.opengamma.strata.market.explain.ExplainKey<?>>) newValue;
			  this.columnKeys_Renamed = (IList<ExplainKey<object>>) newValue;
			  break;
			case 1598220112: // columnHeaders
			  this.columnHeaders_Renamed = (IList<string>) newValue;
			  break;
			case 3076010: // data
			  this.data_Renamed = (Table<int, int, object>) newValue;
			  break;
			default:
			  throw new NoSuchElementException("Unknown property: " + propertyName);
		  }
		  return this;
		}

		public override Builder set<T1>(MetaProperty<T1> property, object value)
		{
		  base.set(property, value);
		  return this;
		}

		public override CashFlowReport build()
		{
		  return new CashFlowReport(valuationDate_Renamed, runInstant_Renamed, columnKeys_Renamed, columnHeaders_Renamed, data_Renamed);
		}

		//-----------------------------------------------------------------------
		/// <summary>
		/// Sets the valuation date. </summary>
		/// <param name="valuationDate">  the new value, not null </param>
		/// <returns> this, for chaining, not null </returns>
		public Builder valuationDate(LocalDate valuationDate)
		{
		  JodaBeanUtils.notNull(valuationDate, "valuationDate");
		  this.valuationDate_Renamed = valuationDate;
		  return this;
		}

		/// <summary>
		/// Sets the instant at which the report was run. </summary>
		/// <param name="runInstant">  the new value, not null </param>
		/// <returns> this, for chaining, not null </returns>
		public Builder runInstant(Instant runInstant)
		{
		  JodaBeanUtils.notNull(runInstant, "runInstant");
		  this.runInstant_Renamed = runInstant;
		  return this;
		}

		/// <summary>
		/// Sets the keys corresponding to the columns. </summary>
		/// <param name="columnKeys">  the new value, not null </param>
		/// <returns> this, for chaining, not null </returns>
		public Builder columnKeys<T1>(IList<T1> columnKeys)
		{
		  JodaBeanUtils.notNull(columnKeys, "columnKeys");
		  this.columnKeys_Renamed = columnKeys;
		  return this;
		}

		/// <summary>
		/// Sets the {@code columnKeys} property in the builder
		/// from an array of objects. </summary>
		/// <param name="columnKeys">  the new value, not null </param>
		/// <returns> this, for chaining, not null </returns>
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @SafeVarargs public final Builder columnKeys(com.opengamma.strata.market.explain.ExplainKey<?>... columnKeys)
//JAVA TO C# CONVERTER WARNING: Java wildcard generics have no direct equivalent in .NET:
		public Builder columnKeys(params ExplainKey<object>[] columnKeys)
		{
		  return this.columnKeys(ImmutableList.copyOf(columnKeys));
		}

		/// <summary>
		/// Sets the column headers. </summary>
		/// <param name="columnHeaders">  the new value, not null </param>
		/// <returns> this, for chaining, not null </returns>
		public Builder columnHeaders(IList<string> columnHeaders)
		{
		  JodaBeanUtils.notNull(columnHeaders, "columnHeaders");
		  this.columnHeaders_Renamed = columnHeaders;
		  return this;
		}

		/// <summary>
		/// Sets the {@code columnHeaders} property in the builder
		/// from an array of objects. </summary>
		/// <param name="columnHeaders">  the new value, not null </param>
		/// <returns> this, for chaining, not null </returns>
		public Builder columnHeaders(params string[] columnHeaders)
		{
		  return this.columnHeaders(ImmutableList.copyOf(columnHeaders));
		}

		/// <summary>
		/// Sets the cashflow data table. </summary>
		/// <param name="data">  the new value, not null </param>
		/// <returns> this, for chaining, not null </returns>
		public Builder data(Table<int, int, object> data)
		{
		  JodaBeanUtils.notNull(data, "data");
		  this.data_Renamed = data;
		  return this;
		}

		//-----------------------------------------------------------------------
		public override string ToString()
		{
		  StringBuilder buf = new StringBuilder(192);
		  buf.Append("CashFlowReport.Builder{");
		  buf.Append("valuationDate").Append('=').Append(JodaBeanUtils.ToString(valuationDate_Renamed)).Append(',').Append(' ');
		  buf.Append("runInstant").Append('=').Append(JodaBeanUtils.ToString(runInstant_Renamed)).Append(',').Append(' ');
		  buf.Append("columnKeys").Append('=').Append(JodaBeanUtils.ToString(columnKeys_Renamed)).Append(',').Append(' ');
		  buf.Append("columnHeaders").Append('=').Append(JodaBeanUtils.ToString(columnHeaders_Renamed)).Append(',').Append(' ');
		  buf.Append("data").Append('=').Append(JodaBeanUtils.ToString(data_Renamed));
		  buf.Append('}');
		  return buf.ToString();
		}

	  }

	  //-------------------------- AUTOGENERATED END --------------------------
	}

}